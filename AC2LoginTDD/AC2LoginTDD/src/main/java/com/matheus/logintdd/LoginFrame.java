package com.matheus.logintdd;

import java.awt.Color;
import java.awt.Font;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Admin
 */
public class LoginFrame extends javax.swing.JFrame {
    
    private JTextField usuarioField;
    private JPasswordField senhaField;
    private JButton loginButton;
    private JLabel messageLabel;
    private LoginScreen loginService; 

    /**
     * Creates new form LoginFrame
     */
    /**
 * Construtor da classe LoginFrame.
 * Este construtor inicializa os componentes da interface de login.
 */
public LoginFrame() {
    // Inicializa o serviço de login
    loginService = new LoginScreen();

    // Configurações da janela de login
    setTitle("Usuário");
    setSize(300, 200);
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    setLocationRelativeTo(null);

    // Cria um painel para os componentes da interface
    JPanel panel = new JPanel();
    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

    // Cria campos de entrada para usuário e senha
    usuarioField = new JTextField();
    senhaField = new JPasswordField();

    // Cria botão de login
    loginButton = new JButton("Entrar");

    // Cria rótulo para mensagens
    messageLabel = new JLabel();

    // Adiciona os componentes ao painel
    panel.add(createLabel("Usuário:", Color.BLUE, Font.BOLD, 14));
    panel.add(usuarioField);
    panel.add(createLabel("Senha:", Color.BLUE, Font.BOLD, 14));
    panel.add(senhaField);
    panel.add(loginButton);
    panel.add(messageLabel);

    // Adiciona o painel à janela de login
    add(panel);

    // Define a ação do botão de login
    loginButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            // Obtém o usuário e senha inseridos
            String username = usuarioField.getText();
            String password = new String(senhaField.getPassword());

            // Verifica o login com o serviço de login
            if (loginService.login(username, password)) {
                messageLabel.setText("Logado");
            } else {
                messageLabel.setText("Usuário ou senha incorreta");
            }
        }
    });
}

/**
 * Método para criar um rótulo com estilo personalizado.
 * 
 * @param text O texto do rótulo.
 * @param color A cor do texto.
 * @param style O estilo do texto (Font.BOLD, Font.ITALIC, etc.).
 * @param size O tamanho do texto.
 * @return Um rótulo com o texto e estilo especificados.
 */
private JLabel createLabel(String text, Color color, int style, int size) {
    JLabel label = new JLabel(text);
    label.setForeground(color);
    label.setFont(new Font("Arial", style, size));
    return label;
}

/**
 * Método para criar texto estilizado em HTML.
 * 
 * @param text O texto a ser estilizado.
 * @param color A cor do texto.
 * @param style O estilo do texto (Font.BOLD, Font.ITALIC, etc.).
 * @param size O tamanho do texto.
 * @return Uma string HTML com o texto estilizado.
 */
private String createStyledText(String text, Color color, int style, int size) {
    return "<html><font color='" + color.getRGB() + "' size='" + size + "'><b>" + text + "</b></font></html>";
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}


